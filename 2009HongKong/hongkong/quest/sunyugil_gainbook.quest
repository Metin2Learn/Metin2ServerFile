quest sunyugil_gainbook begin

	state start begin

		when bookworm.chat.locale.bookworm.talk begin

			local START_say = locale.bookworm.START_say
			local START_say2 = locale.bookworm.START_say2

			say(START_say)
			wait()
			say(START_say2)

		end

		when aranyeo.chat.locale.bookworm.aranyeo_talk begin

			local START_say = locale.bookworm.aranyeo_START_say
			local START_say2 = locale.bookworm.aranyeo_START_say2
        
			say(START_say)
			wait()
			say(START_say2)

		end

		when etc_shop.chat.locale.bookworm.etc_shop_talk_about_bookworm with pc.level>=locale.bookworm.start_level_begin and pc.level<=locale.bookworm.start_level_end and number(1, locale.bookworm.start_probability)==1 begin

			local START_say1 = locale.bookworm.etc_shop_START_say
			local START_say2 = locale.bookworm.etc_shop_START_say2

			say(START_say1) 
			wait()
			say(START_say2)

			say(locale.bookworm.START_find_bookworm_text)

			setstate(order)
			makequestbutton(locale.bookworm.START_find_bookworm_label)
			q.set_title(locale.bookworm.START_find_bookworm_label)
			q.start()

		end

	end

	state order begin

		when login begin

			setskin(NOWINDOW)
			makequestbutton(locale.bookworm.START_find_bookworm_label)
			q.set_title(locale.bookworm.START_find_bookworm_label)
			q.start()

		end

		when button begin

			say(locale.bookworm.START_find_bookworm_text)

		end

		when info begin

			say(locale.bookworm.START_find_bookworm_text)

		end

		when bookworm.chat.locale.bookworm.talk_about_milgyo_book with pc.level<=locale.bookworm.end_level begin

			local ORDER_say1 = locale.bookworm.ORDER_say1
			local ORDER_say2 = locale.bookworm.ORDER_say2
			local ORDER_accept = locale.bookworm.ORDER_accept
			local ORDER_refuse = locale.bookworm.ORDER_refuse
			local ORDER_accept_answer = locale.bookworm.ORDER_accept_answer
			local ORDER_refuse_answer = locale.bookworm.ORDER_refuse_answer

			say(ORDER_say1)
			wait()
			say(ORDER_say2)

			local s=select(ORDER_accept, ORDER_refuse)
			if 1==s then

				say(ORDER_accept_answer)
				say(locale.bookworm.ORDER_find_book_text)

				setstate(accept)
				makequestbutton(locale.bookworm.ORDER_find_book_label)
				q.set_title(locale.bookworm.ORDER_find_book_label)
				pc.setqf("kill_count", 0)

			else

				say(ORDER_refuse_answer)

			end

		end

		when bookworm.chat.locale.bookworm.do_you_find_the_book with pc.level>locale.bookworm.end_level begin

			say(locale.bookworm.ORDER_too_late)
			setstate(complete)
			q.done()

		end

	end

	state accept begin

		when login begin

			setskin(NOWINDOW)
			makequestbutton(locale.bookworm.ORDER_find_book_label)
			q.set_title(locale.bookworm.ORDER_find_book_label)
			q.start()

		end

		when button begin

			say(locale.bookworm.ORDER_find_book_text)

		end

		when info begin

			say(locale.bookworm.ORDER_find_book_text)

		end

		when milgyo_religionist.kill begin

			--?? ???? ??? ?? ???? ????.
			--?? ???? ?? 35 ???
			--?? ???? ?? ??? milgyo_religionist

			local kill_count = pc.getqf("kill_count")
			local success_label = locale.bookworm.ACCEPT_success_info_label
			local success_say = locale.bookworm.ACCEPT_success_say
			local failure_label = locale.bookworm.ACCEPT_failure_info_label
			local failure_say = locale.bookworm.ACCEPT_failure_say

			pc.setqf("kill_count", kill_count+1)

			chat("cur kill"..kill_count)
			chat("pc lv"..pc.level)
			chat("end lv"..locale.bookworm.end_level)
			chat("dst kill"..locale.bookworm.kill_count)
			chat("find"..pc.getqf("find"))

			--chat("找到")

			if pc.level>locale.bookworm.end_level then

				chat("等級超過")

				if kill_count>locale.bookworm.kill_count then

					chat("數量超過")

					say(failure_say)

					setstate(failure)
					makequestbutton(failure_label)
					q.set_title(failure_label)

				end

			else

				chat("應用等級")

				if number(1, locale.bookworm.kill_count)==1 then

					chat("確率成功")
					chat("獲得")

					say(success_say)

					setstate(success)
					makequestbutton(success_label)
					q.set_title(success_label)
					
				end

			end			

		end

		when bookworm.chat.locale.bookworm.do_you_find_the_book begin

			local ACCEPT_ask = locale.bookworm.ACCEPT_ask

			say(ACCEPT_ask)

		end

	end

	state success begin

		when login begin

			setskin(NOWINDOW)
			makequestbutton(locale.bookworm.ACCEPT_success_info_label)
			q.set_title(locale.bookworm.ACCEPT_success_info_label)
			q.start()

		end

		when button begin

			say(locale.bookworm.ACCEPT_success_info_text)

		end

		when info begin

			say(locale.bookworm.ACCEPT_success_info_text)

		end

		when bookworm.chat.locale.bookworm.do_you_mean_this_book begin

			local SUCCESS_thanks = locale.bookworm.SUCCESS_thanks

			say(SUCCESS_thanks)
			wait()
			say(locale.QUEST_TEMP_REWARD)

			setstate(complete)
			q.done()

		end

	end

	state failure begin

		when login begin

			setskin(NOWINDOW)
			makequestbutton(locale.bookworm.ACCEPT_failure_info_label)
			q.set_title(locale.bookworm.ACCEPT_failure_info_label)
			q.start()

		end

		when button begin

			say(locale.bookworm.ACCEPT_failure_info_text)

		end

		when info begin

			say(locale.bookworm.ACCEPT_failure_info_text)

		end

		when bookworm.chat.locale.bookworm.do_you_find_the_book begin

			say(locale.bookworm.ORDER_too_late)
			setstate(complete)
			q.done()

		end
	end

	state complete begin

		when bookworm.chat.locale.bookworm.talk begin

			local COMPLETE_say = locale.bookworm.COMPLETE_say
			say(COMPLETE_say)

		end

		when aranyeo.chat.locale.bookworm.aranyeo_talk begin

			local COMPLETE_say = locale.bookworm.aranyeo_COMPLETE_say
			local COMPLETE_say2 = locale.bookworm.aranyeo_COMPLETE_say2
        
			say(COMPLETE_say)
			wait()
			say(COMPLETE_say2)

		end
	end

end
	


